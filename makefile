##############################################################
###### 获取所有需要编译的.c文件
src  =$(wildcard ./*.c)
src +=$(wildcard ./common/*.c)

###### 获取所有需要.o文件
obj 	= $(patsubst ./%.c, ./%.obj, $(src))
obi 	= $(patsubst ./%.c, ./%.i, $(src))
obb 	= $(patsubst %.c, ./out/%.o, $(notdir $(src)))

headf	= ./common/

trage 	= app
CC 		= gcc
output  =.\out
##############################################################
# wildcard 查找当前目录下的文件给 返回值 eg： src=$(wildcard ./*.c)
# patsubat 替换 所有.c文件为.o eg：obj=$(patsubst ./%.c,./%.o,$src) %:通配符

#	$< : 规则中的第一个依赖
#	$@ ：规则中的目标
#	$^ ： 规则中所有的依赖
##############################################################
# $(trage):   
# 	$(CC) $(src) -o $@  \
# 	-I $(iclude) 
# 	./$(trage)

###############################################################
Obj_: $(obi) $(trage)  # Start
##############################################################
$(trage): $(obj)
	$(CC)  $(patsubst %, ./out/%, $(notdir $^)) -o $@  \
	-I $(headf) \
	-O0
	./$(trage)
###############################################################
# echo $@ && \
# echo $(notdir $@)  && 
###############################################################
# %.o: %.c
# 	@$(CC) -c $< -o $(output)/$(notdir $@) \
# 	-I $(headf)  
###############################################################
%.i: %.c
	@echo $@ && \
	@echo $< && \
	$(CC) -E $< -o $(output)/$(notdir $@) \
	-I $(headf) 
###############################################################
%.s: %.i
	echo $@ && \
	echo $< && \
	$(CC) -S $(output)/$(notdir $<) -o  $(output)/$(notdir $@) \
	-I $(headf) 
###############################################################
%.obj: %.s
	echo $@ && \
	echo $< && \
	$(CC) -c $(output)/$(notdir $<) -o  $(output)/$(notdir $@) \
	-I $(headf) 
###############################################################
.PHONY:clean
clean:
	del /Q  $(output)\*
	del /Q  *.exe  
	del /Q  *.o 	
##############################################################